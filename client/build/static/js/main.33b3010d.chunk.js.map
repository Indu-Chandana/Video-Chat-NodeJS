{"version":3,"sources":["SocketContext.js","components/VideoPlayer.jsx","components/Notifications.jsx","components/Options.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","userVideo","useRef","myVideo","connectionRef","useState","stream","setSteam","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivedCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoPlay","Notifications","style","display","Button","color","onClick","root","marginTop","Options","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","text","startIcon","Assignment","fontSize","PhoneDisabled","Phone","appBar","borderRadius","alignItems","image","marginLeft","wrapper","App","AppBar","position","align","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33b3010d.chunk.js","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io('https://video-chat-indu.herokuapp.com');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n\r\n    const userVideo = useRef();\r\n    const myVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n    const[stream, setSteam] = useState(null);\r\n    const[me, setMe] = useState(null);\r\n    const[call, setCall] =useState({});\r\n    const[callAccepted, setCallAccepted] = useState(false);\r\n    const[callEnded, setCallEnded] = useState(false);\r\n    const[name, setName] = useState('');\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n        .then((currentStream) => {\r\n            setSteam(currentStream);\r\n\r\n            myVideo.current.srcObject = currentStream\r\n        })\r\n\r\n        socket.on('me', (id) => setMe(id));\r\n\r\n        socket.on('calluser', ({ from, name: callerName, signal }) => {\r\n            setCall({ isReceivedCall: true, from, name: callerName, signal})\r\n        })\r\n    }, []);\r\n\r\n    const answerCall = () => {\r\n        setCallAccepted(true)\r\n\r\n        const peer = new Peer({ initiator: false, trickle: false, stream});\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('answercall', { signal: data, to: call.from })\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream\r\n        })\r\n\r\n        peer.signal(call.signal);\r\n\r\n        connectionRef.current = peer;\r\n    }\r\n\r\n    const callUser = (id) => {\r\n        const peer = new Peer({ initiator: true, trickle: false, stream});\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('calluser', { userToCall: id, signalData: data, from: me, name })\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream\r\n        })\r\n\r\n        socket.on('callaccepted', (signal) => {\r\n            setCallAccepted(true);\r\n\r\n            peer.signal(signal);\r\n        })\r\n\r\n        connectionRef.current = peer;\r\n    }\r\n\r\n    const leaveCall = () => {\r\n        setCallEnded(true);\r\n\r\n        connectionRef.current.destroy();\r\n\r\n        window.location.reload(); //reload and change userID\r\n    }\r\n\r\n    return (\r\n        <SocketContext.Provider value={{\r\n            call,\r\n            callAccepted,\r\n            myVideo,\r\n            userVideo,\r\n            stream,\r\n            name,\r\n            setName,\r\n            callEnded,\r\n            me,\r\n            callUser,\r\n            leaveCall,\r\n            answerCall,\r\n        }}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    \r\n    )\r\n}\r\n\r\nexport { ContextProvider, SocketContext};\r\n","import React, { useContext } from 'react';\r\nimport { Grid, Typography, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    video: {\r\n      width: '550px',\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '300px',\r\n      },\r\n    },\r\n    gridContainer: {\r\n      justifyContent: 'center',\r\n      [theme.breakpoints.down('xs')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    paper: {\r\n      padding: '10px',\r\n      border: '2px solid black',\r\n      margin: '10px',\r\n    },\r\n}));\r\n\r\nconst VideoPlayer = () => {\r\n    const { name, callAccepted, myVideo, userVideo, callEnded, stream, call} = useContext(SocketContext)\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.gridContainer}>\r\n\r\n            {/* our own videos */}\r\n            { stream && (\r\n                <Paper className={classes.paper}>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Typography variant=\"h5\" gutterBottom> {name || 'Name' } </Typography>\r\n                        <video playsInline muted ref={myVideo} autoPlay className={classes.video}/>\r\n                    </Grid>\r\n                </Paper>\r\n            )}\r\n            \r\n            {/* User's Videos */}\r\n            {callAccepted && !callEnded && (\r\n                <Paper className={classes.paper}>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Typography variant=\"h5\" gutterBottom> {call.name || 'Name'} </Typography>\r\n                        <video playsInline ref={userVideo} autoPlay className={classes.video}/>\r\n                    </Grid>\r\n                </Paper>\r\n            )}\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default VideoPlayer\r\n","import React, { useContext } from 'react';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst Notifications = () => {\r\n    const {answerCall, callAccepted, call} = useContext(SocketContext)\r\n\r\n    return (\r\n        <>\r\n            {call.isReceivedCall && !callAccepted && (\r\n                <div style={{ display: 'flex', justifyContent: 'center'}}>\r\n                    <h1>{call.name} is calling: </h1>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n                        Answer\r\n                    </Button>\r\n                </div>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notifications\r\n","import React, { useContext, useState } from 'react';\r\nimport { Button, TextField, Grid, Typography, Container, Paper } from '@material-ui/core';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Assignment, Phone, PhoneDisabled } from \"@material-ui/icons\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    gridContainer: {\r\n      width: '100%',\r\n      [theme.breakpoints.down('xs')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    container: {\r\n      width: '600px',\r\n      margin: '35px 0',\r\n      padding: 0,\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '80%',\r\n      },\r\n    },\r\n    margin: {\r\n      marginTop: 20,\r\n    },\r\n    padding: {\r\n      padding: 20,\r\n    },\r\n    paper: {\r\n      padding: '10px 20px',\r\n      border: '2px solid black',\r\n    },\r\n   }));\r\n  \r\n\r\nconst Options = ({children}) => {\r\n    const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext)\r\n    const [idToCall, setIdToCall] = useState(''); //Pass a ID \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Paper elevation={10} className={classes.paper}>\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <Grid container className={classes.gridContainer}>\r\n                        <Grid item xs={12} md={6} className={classes.padding}> \r\n                            <Typography gutterBottom variant=\"h6\">Account Info</Typography>\r\n                            <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\r\n                            <CopyToClipboard text={me} className={classes.margin}>\r\n                                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={< Assignment fontSize=\"large\" />}>\r\n                                    Copy Your ID\r\n                                </Button>\r\n                            </CopyToClipboard>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} className={classes.padding}> \r\n                            <Typography gutterBottom variant=\"h6\">Make a call</Typography>\r\n                            <TextField label=\"ID to call\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\r\n                            {callAccepted && !callEnded ? (\r\n                                <Button \r\n                                variant=\"contained\" \r\n                                color=\"secondary\" \r\n                                startIcon={<PhoneDisabled fontSize=\"large\"/>}\r\n                                fullWidth\r\n                                onClick={leaveCall}\r\n                                className={classes.margin}\r\n                                >\r\n                                    Hang Up\r\n                                </Button>\r\n                            ) : (\r\n                                <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                startIcon={<Phone fontSize=\"large\"/>}\r\n                                fullWidth\r\n                                onClick={() => callUser(idToCall)}\r\n                                className={classes.margin}\r\n                                >\r\n                                    Call\r\n                                </Button>\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            {children}\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Options\r\n","import React from 'react'\r\nimport { Typography, AppBar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport VideoPlayer from './components/VideoPlayer';\r\nimport Notifications from './components/Notifications';\r\nimport Options from './components/Options';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n      borderRadius: 15,\r\n      margin: '30px 100px',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: '600px',\r\n      border: '2px solid black',\r\n  \r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '90%',\r\n      },\r\n    },\r\n    image: {\r\n      marginLeft: '15px',\r\n    },\r\n    wrapper: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      width: '100%',\r\n    },\r\n  }));\r\n\r\nconst App = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.wrapper}> \r\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n                <Typography variant=\"h2\" align=\"center\">Video Meet</Typography>\r\n            </AppBar>\r\n\r\n            <VideoPlayer/>\r\n\r\n            <Options>\r\n                <Notifications/>\r\n            </Options>\r\n            {/* VideoPlayer */}\r\n            {/* Options --> Notification */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport { ContextProvider } from './SocketContext';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n    <ContextProvider>\r\n        <App/>\r\n    </ContextProvider>,\r\n    document.getElementById('root'));"],"sourceRoot":""}